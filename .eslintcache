[{"C:\\Users\\Mahi\\Repos\\todo-app\\src\\index.js":"1","C:\\Users\\Mahi\\Repos\\todo-app\\src\\App.js":"2","C:\\Users\\Mahi\\Repos\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\List.js":"4","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Context.js":"5","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\APICalls.js":"6","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\QuickButtons.js":"7","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Login.js":"8","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Home.js":"9","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Nav.js":"10","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\UlList\\LiList.js":"11","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\UlTodo\\LiTodo.js":"12","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Todo.js":"13","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\CreateListForm.js":"14","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\Utils.js":"15","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\Definations.js":"16","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\ProtectedRoute.js":"17","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Logout.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":1461,"mtime":1615751894904,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":9605,"mtime":1615746463622,"results":"23","hashOfConfig":"20"},{"size":149,"mtime":1615074072425,"results":"24","hashOfConfig":"20"},{"size":3939,"mtime":1615747195723,"results":"25","hashOfConfig":"20"},{"size":1326,"mtime":1613941200318,"results":"26","hashOfConfig":"20"},{"size":2592,"mtime":1615744694206,"results":"27","hashOfConfig":"20"},{"size":7665,"mtime":1615751380314,"results":"28","hashOfConfig":"20"},{"size":1035,"mtime":1615752293738,"results":"29","hashOfConfig":"20"},{"size":3934,"mtime":1615146312852,"results":"30","hashOfConfig":"20"},{"size":3398,"mtime":1615439613883,"results":"31","hashOfConfig":"20"},{"size":3090,"mtime":1615362559909,"results":"32","hashOfConfig":"20"},{"size":1962,"mtime":1615145939041,"results":"33","hashOfConfig":"20"},{"size":436,"mtime":1614957234198,"results":"34","hashOfConfig":"20"},{"size":302,"mtime":1615441762107,"results":"35","hashOfConfig":"20"},{"size":516,"mtime":1615149596164,"results":"36","hashOfConfig":"20"},{"size":310,"mtime":1615751972775,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1n3pwho",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":1,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mahi\\Repos\\todo-app\\src\\index.js",[],["85","86"],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\App.js",["87","88"],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\List.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106"],"import { faClock, faExpandAlt, faFile, faSort, faHandRock } from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport Nav from './Nav'\r\nimport {QuickButtons, ButtonC} from './QuickButtons'\r\nimport {request, requestTodoCreate, requestTodoUpdate, requestUpdateSortingConfig} from './utility/APICalls'\r\nimport {reportType} from './utility/Definations'\r\nimport LiTodo from './UlTodo/LiTodo'\r\nimport {tagLists} from './utility/Utils'\r\n\r\nconst todoSortType = {\r\n    AGE: 'created_at',\r\n    PRIORITY: 'priority'\r\n}\r\n\r\nconst List = ({global: [global, setGlobal]}) => {\r\n    const history = useHistory()\r\n    const {id} = useParams()\r\n\r\n    //Grab the latest state for this list from global\r\n    //We are mantaining single source of truth, state refers to global.todoLists\r\n    //It is updated on every single render\r\n    var state = null\r\n    if (global && global.todoLists) {\r\n        state = global.todoLists.find(x => x._id == id)\r\n    }\r\n    \r\n    const buttons = [\r\n        new ButtonC(\"New\", faFile, _ => { history.push({pathname: '/todo', search: `?listId=${id}`}) }),\r\n        new ButtonC(\"Sort\", faSort, null, [\r\n            new ButtonC(\"Age\", faClock, _ => sort(todoSortType.AGE)),\r\n            new ButtonC(\"Priority\", faHandRock, _ => sort(todoSortType.PRIORITY))\r\n        ]),\r\n        new ButtonC(\"Expand all\", faExpandAlt, null)\r\n    ]\r\n\r\n    //Always update todoLists using this function only.\r\n    //It ensures todoLists always are tagged.\r\n    const tagAndUpdateTodoLists = cb => {\r\n        setGlobal((prev) => {\r\n            //If we have callback, process todoLists in it\r\n            cb(prev.todoLists)\r\n            //tag lists\r\n            tagLists(prev.todoLists)\r\n            //Update it in global\r\n            return {\r\n                ...prev, todoLists: prev.todoLists\r\n            }\r\n        })\r\n    }\r\n\r\n    //Handles subcomponent response received from remote endpoint\r\n    //for reportT, Refer to reportType\r\n    //remoteResponse, {status: number, json: Obj}\r\n    const subComponentReportHandler = (reportT, remoteResponse) => {\r\n        switch(reportT) {\r\n            case reportType.CREATE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    const createTodoCallback = (todoLists) => {\r\n                        var todoList = todoLists.find(x => x._id == id)\r\n                        todoList.todo_items.push(remoteResponse.json)\r\n                    }\r\n                    tagAndUpdateTodoLists(createTodoCallback)\r\n                }\r\n                break\r\n            case reportType.UPDATE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    const updateTodoCallback = (todoLists) => {\r\n                        var todoListIndex = todoLists.findIndex(x => x._id == id)\r\n                        var todoItemIndex = todoLists[todoListIndex].todo_items.findIndex(x => x._id == remoteResponse.json._id)\r\n                        todoLists[todoListIndex].todo_items[todoItemIndex] = {... todoLists[todoListIndex].todo_items[todoItemIndex], ...remoteResponse.json}\r\n                    }\r\n                    tagAndUpdateTodoLists(updateTodoCallback)\r\n                }\r\n                break\r\n            case reportType.DELETE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    const deleteTodoCallback = (todoLists) => {\r\n                        var todoListIndex = todoLists.findIndex(x => x._id == id)\r\n                        var todoItemIndex = todoLists[todoListIndex].todo_items.findIndex(x => x._id == remoteResponse.json._id)\r\n                        todoLists[todoListIndex].todo_items.splice(todoItemIndex, 1)\r\n                    }\r\n                    tagAndUpdateTodoLists(deleteTodoCallback)\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    const handleReceivedTodo = todo => {\r\n        //Update\r\n        if (todo._id) {\r\n            requestTodoUpdate(id, todo)\r\n            .then(response => {\r\n                if (response.status != 200) {\r\n                    //throw notification to user\r\n                    subComponentReportHandler(reportType.UPDATE, {status: response.status})\r\n                    throw new Error(`Error occured while updating todo.`)\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(updatedTodo => {\r\n                subComponentReportHandler(reportType.UPDATE, {status: 200, json: updatedTodo})\r\n            })\r\n        }\r\n        else {\r\n            //create\r\n            requestTodoCreate(id, todo)\r\n            .then(response => {\r\n                if (response.status != 200) {\r\n                    subComponentReportHandler(reportType.CREATE, {status: response.status})\r\n                    throw new Error(`Error occured while creating todo.`)\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(newTodo => {\r\n                subComponentReportHandler(reportType.CREATE, {status: 200, json: newTodo})\r\n            })\r\n        }\r\n    }\r\n\r\n    const sort = (criteria) => {\r\n        const prevCriteria = state.sort.split('.')\r\n        if (criteria === prevCriteria[0]) {\r\n            //Opposite sorting order\r\n            if (prevCriteria[1] === 'desc') {\r\n                criteria += '.asc'\r\n            }\r\n            else {\r\n                criteria += '.desc'\r\n            }\r\n        } else {\r\n            //Otherwise default desc order\r\n            criteria += '.desc'\r\n        }\r\n\r\n        requestUpdateSortingConfig(state._id, criteria)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                //throw err\r\n            }\r\n            else {\r\n                const updateSortingConfigCallback = todoLists => {\r\n                    var i = todoLists.findIndex(x => x._id == state._id)\r\n                    //Sort the todo_items inplace according to the todoList.sort\r\n                    //Right now we are only sorting if the criteria is 'priorirty'\r\n                    const criteria_ = criteria.split('.')\r\n                    if (criteria_[0] === todoSortType.PRIORITY) {\r\n                        if (criteria_[1] === 'asc') {\r\n                            todoLists[i].todo_items.sort(priorityCompare)\r\n                        }\r\n                        else {\r\n                            todoLists[i].todo_items.sort((a, b) => (-1 * priorityCompare(a, b)))\r\n                        }\r\n                    }\r\n                    else if (criteria_[0] === todoSortType.AGE) {\r\n                        if (criteria_[1] === 'asc') {\r\n                            todoLists[i].todo_items.sort(createdAtCompare)\r\n                        }\r\n                        else {\r\n                            todoLists[i].todo_items.sort((a, b) => (-1 * createdAtCompare(a, b)))\r\n                        }\r\n                    }\r\n                    todoLists[i] = {\r\n                        ...todoLists[i], sort: criteria\r\n                    }\r\n                }\r\n                tagAndUpdateTodoLists(updateSortingConfigCallback)\r\n            }\r\n        })\r\n    }\r\n\r\n    //It is callback function to compare todos based on priority\r\n    //Orders them in descending order\r\n    //multiply the result by -1, for ascending order\r\n    const priorityCompare = (a, b) => {\r\n        if (a.priority === b.priority) return 0\r\n        if (a.priority === 'high') return -1\r\n        if (a.priority === 'moderate' && b.priority !== 'high') return -1\r\n        return 1\r\n    }\r\n\r\n    const createdAtCompare = (a, b) => {\r\n        if (a.created_at === b.created_at) return 0\r\n        if (a.created_at > b.created_at) return -1\r\n        return 1\r\n    }\r\n\r\n     useEffect(() => {\r\n         if (!global.todoLists)\r\n            return history.push({pathname: '/'})\r\n        //In case we do not have list id passed in as url params, redirect user back to the Home page\r\n        if (!id) {\r\n            history.push({pathname: '/'})\r\n        }\r\n        else {\r\n            var ind = global.todoLists.findIndex(x => x._id === id)\r\n            if (ind === -1)\r\n                history.push({pathname: '/'})\r\n            //If the user is redirected to this page from the /todo, then check for the state received to add or update todo\r\n            if (history.location.state && history.location.state.todo) {\r\n                handleReceivedTodo(history.location.state.todo)\r\n                //clear history.location.state\r\n                history.replace(`/list/${id}`)\r\n            }\r\n        }\r\n     }, [])\r\n    \r\n    return (\r\n        <div className=\"home\">\r\n            <Nav />\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    {state && state.title}\r\n                </div>\r\n                <>\r\n                    <QuickButtons buttons={buttons} />\r\n                    <br />\r\n                    {!state ? <p>Please wait while we load your data...</p> :  \r\n                    <div className=\"ul-list\">\r\n                        {state.todo_items.map((x) => <LiTodo key={x._id} todoListId={state._id} todo={x} reportParent={subComponentReportHandler} />)}\r\n                    </div>\r\n                    }   \r\n                </>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Context.js",["107"],"import React, {useState} from 'react'\r\n\r\nexport const DataContext = React.createContext(null)\r\nexport const AuthContext = React.createContext(null)\r\n","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\APICalls.js",[],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\QuickButtons.js",["108"],"import React from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\n\r\nexport class ButtonC {\r\n    constructor(title, faIcon, onClick, dropdowns = []) {\r\n        this.title = title\r\n        this.faIcon = faIcon\r\n        this.dropdowns = dropdowns\r\n        this.onClick = onClick\r\n    }\r\n}\r\n\r\nexport const Button = ({ button }) => {\r\n    return (\r\n        <button onClick={button.onClick}>\r\n            {button.faIcon != null && <FontAwesomeIcon icon={button.faIcon} />} {button.title}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport const QuickButtons = ({buttons}) => {\r\n    return (\r\n        <div className=\"quick-buttons\">\r\n            {buttons.map((x) => {\r\n                if (x.dropdowns.length == 0) {\r\n                    return <Button button={x} />\r\n                }\r\n                else {\r\n                    return (\r\n                        <div className=\"dropdown\">\r\n                            <Button button={x} />\r\n                            <div className=\"dropdown-content\">\r\n                                {x.dropdowns.map((y) => {\r\n                                    return <Button button={y} />\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Login.js",["109","110"],"import React, {useContext} from 'react'\r\nimport {GoogleLogin} from 'react-google-login'\r\nimport {AuthContext} from './Context'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst Login = _ => {\r\n    const AUTH_ENDPOINT = \"http://localhost:5001/api/auth/google\"\r\n    //const [data, setData] = useContext(DataContext)\r\n    const [auth, setAuth] = useContext(AuthContext)\r\n\r\n    const history = useHistory()\r\n    //Verify idToken with the server, login user if green flagged, otherwise throw error\r\n    const verifyToken = async googleLoginResponse => {\r\n        const res = await fetch(AUTH_ENDPOINT, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                idToken: googleLoginResponse.tokenId\r\n            }),\r\n            headers: {\r\n                'Access-Control-Allow-Origin':'http://localhost:3000/',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials: 'include'\r\n        })\r\n        //If authentication successful, mark user loggedIn in auth\r\n        if (res.status == 200) {\r\n            const userConfig = await res.json()\r\n            setAuth((prev) => {\r\n                return {\r\n                    ...prev, ...userConfig, loggedIn: true\r\n                }\r\n            })\r\n            //Redirect the user to Home\r\n            var redirectPath = '/'\r\n            if (history.location && history.location.state && history.location.state.from) {\r\n                console.log(history.location.state)\r\n                redirectPath = history.location.state.from\r\n            }\r\n            history.push({\r\n                pathname: redirectPath\r\n            })\r\n        }\r\n        else {\r\n            //If authentication fails, notify the user!\r\n            //!TODO! Create a Notification component \r\n            console.log(\"Authentication failed at back-end layer!\")\r\n        }\r\n    }\r\n\r\n    const onSuccess = async googleLoginResponse => {\r\n        //Verify token with the server\r\n        verifyToken(googleLoginResponse)\r\n    }\r\n\r\n    const onFailure = async _ => {\r\n        setAuth(prev => {\r\n            return {\r\n                ...prev, loggedIn: false\r\n            }\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"login\">\r\n            <GoogleLogin\r\n                clientId={process.env.REACT_APP_CLIENT_ID}\r\n                isSignedIn={true}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Home.js",["111","112","113","114","115","116","117","118","119","120","121"],"import React, {useEffect, useState, useContext} from 'react'\r\nimport {faFile, faSort} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {requestAll} from './utility/APICalls'\r\nimport Nav from './Nav'\r\nimport {QuickButtons, ButtonC} from './QuickButtons'\r\nimport LiList from './UlList/LiList'\r\nimport CreateListForm from './CreateListForm'\r\nimport {tagLists} from './utility/Utils'\r\nimport {reportType} from './utility/Definations'\r\nimport {requestUpdateListSortingConfig} from './utility/APICalls'\r\nimport {AuthContext} from './Context'\r\n\r\nconst Home = ({global: [global, setGlobal]}) => {\r\n    const [state, setState] = useState({createListFormEnabled: false})\r\n    const sortType = {\r\n        ALPHABETICAL: 'title',\r\n        PENDING_ITEMS: 'pendingCount',\r\n        HIGH_PRIORITY_ITEMS: 'highPriorityCount',\r\n        CREATED_AT: 'created_at'\r\n    }\r\n    const sortingOrder = {\r\n        ASC: 'asc',\r\n        DESC: 'desc'\r\n    }\r\n    const [authContext, setAuthContext] = useContext(AuthContext)\r\n    \r\n    //Event handler for \"New\" list button\r\n    const toggleForm = _ => {\r\n        setState((prev) => {\r\n            return {\r\n                ...prev, createListFormEnabled: !prev.createListFormEnabled\r\n            }\r\n        })\r\n    }\r\n\r\n    //Always update todoLists using this function only.\r\n    //It ensures todoLists always are tagged.\r\n    const tagAndUpdateTodoLists = (cb, todoLists = null) => {\r\n        setGlobal((prev) => {\r\n            var todoLists_ = todoLists\r\n            if (todoLists == null)\r\n                todoLists_ = prev.todoLists\r\n\r\n            //If we have callback, process todoLists in it\r\n            cb(todoLists_)\r\n            //tag lists\r\n            tagLists(todoLists_)\r\n            //Update it in global\r\n            return {\r\n                ...prev, todoLists: todoLists_\r\n            }\r\n        })\r\n    }\r\n\r\n    //Handles subcomponent response received from remote endpoint\r\n    //for reportT, Refer to reportType\r\n    //remoteResponse, {status: number, json: Obj}\r\n    const subComponentReportHandler = (reportT, remoteResponse) => {\r\n        switch(reportT) {\r\n            case reportType.CREATE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    tagAndUpdateTodoLists(todoLists => {\r\n                        todoLists.push(remoteResponse.json)\r\n                        listSortingCallback(todoLists, authContext.sort)\r\n                    })\r\n                }\r\n                toggleForm()\r\n                break\r\n            case reportType.UPDATE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    //remoteResponse.json is the updated list\r\n                    //Replace the todoList with the updated one in global\r\n                    tagAndUpdateTodoLists(todoLists => {\r\n                        var index = todoLists.findIndex(x => x._id == remoteResponse.json._id)\r\n                        if (index != -1)\r\n                            todoLists[index] = remoteResponse.json\r\n                        listSortingCallback(todoLists, authContext.sort)\r\n                    })\r\n                }\r\n                break\r\n            case reportType.DELETE:\r\n                if (remoteResponse.status != 200) {\r\n                    //Error occured, do something here.\r\n                }\r\n                else {\r\n                    //remoteResponse.json._id indicates id of the list to be deleted\r\n                    tagAndUpdateTodoLists(todoLists => {\r\n                        const index = todoLists.findIndex(x => x._id === remoteResponse.json.id)\r\n                        if (index != -1)\r\n                            todoLists.splice(index, 1)\r\n                    })\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    const sortByProperty = (a, b, property) => {\r\n        if (a[property] == b[property]) return 0\r\n        if (a[property] > b[property]) return -1\r\n        return 1\r\n    }\r\n\r\n    const listSortingCallback = (todoLists, criteria) => {\r\n        const criteria_ = criteria.split('.')\r\n        if (criteria_[1] === sortingOrder.DESC) {\r\n            todoLists.sort((a, b) => sortByProperty(a, b, criteria_[0]))\r\n        }\r\n        else {\r\n            todoLists.sort((a, b) => (-1 * sortByProperty(a, b, criteria_[0])))\r\n        }\r\n    } \r\n\r\n    //Sort the list, refer to sortType enum for available sorting options\r\n    const sort = criteria => {\r\n        const prevCriteria = authContext.sort.split('.')\r\n        if (criteria === prevCriteria[0]) {\r\n            //Opposite sorting order\r\n            if (prevCriteria[1] === 'desc') {\r\n                criteria += '.asc'\r\n            }\r\n            else {\r\n                criteria += '.desc'\r\n            }\r\n        } else {\r\n            //Otherwise default desc order\r\n            criteria += '.desc'\r\n        }\r\n\r\n        requestUpdateListSortingConfig(criteria)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                //throw error over here\r\n            }\r\n            else {\r\n                setAuthContext(prev => {\r\n                    return {\r\n                        ...prev, sort: criteria\r\n                    }\r\n                })\r\n\r\n                tagAndUpdateTodoLists(todoLists => listSortingCallback(todoLists, criteria))\r\n            }\r\n        })\r\n    }\r\n\r\n    //Buttons, we will pass to \"QuickButtons\" component\r\n    const buttons = [\r\n                        new ButtonC(\"New\", faFile, toggleForm),\r\n                        new ButtonC(\"Sort\", faSort, null, [\r\n                            new ButtonC(\"Alphabetical\", null, () => sort(sortType.ALPHABETICAL)),\r\n                            new ButtonC(\"Pending items\", null, () => sort(sortType.PENDING_ITEMS)),\r\n                            new ButtonC(\"High-priority items\", null, () => sort(sortType.HIGH_PRIORITY_ITEMS)),\r\n                            new ButtonC(\"Date created\", null, () => sort(sortType.CREATED_AT))\r\n                        ])\r\n                    ]\r\n\r\n    //Fetch and store todoList for the current user\r\n    useEffect(() => {\r\n        if (!global.todoLists) {\r\n            requestAll()\r\n            .then(response => {\r\n                if (response.status != 200) { \r\n                    //Notify the user about the error\r\n                    return\r\n                }\r\n                return response.json()\r\n            })\r\n            .then(todoLists => {\r\n                \r\n                console.log(authContext)\r\n\r\n                //arrange the item as per the user sorting preference\r\n                //Then save it in global\r\n                tagAndUpdateTodoLists(todoLists => listSortingCallback(todoLists, authContext.sort), todoLists)\r\n            }) \r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <Nav />\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    My Lists\r\n                </div>\r\n                <QuickButtons buttons={buttons}/>\r\n                <br />\r\n                {state.createListFormEnabled && <CreateListForm reportParent={subComponentReportHandler}/>}\r\n                <div className=\"ul-list\">\r\n                    {!global.todoLists ? \r\n                    <>Please wait while we are loading your data</> : \r\n                    global.todoLists.map((list) => <LiList key={list._id} list={list} reportParent={subComponentReportHandler} />)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Nav.js",[],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\UlList\\LiList.js",["122","123"],"import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faExclamation, faExclamationTriangle, faTrashAlt, faEdit, faSave} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {requestDelete, requestUpdate} from '../utility/APICalls'\r\nimport {reportType} from '../utility/Definations'\r\n\r\nconst LiList = ({list, reportParent}) => {\r\n    const history = useHistory()\r\n    const [state, setState] = useState({rename: false, newTitle: \"\"})\r\n\r\n    const clicked = _ => {\r\n        history.push({\r\n            state: list,\r\n            pathname: `/list/${list._id}`\r\n        })\r\n    }\r\n\r\n    const deleteSelf = event => {\r\n        event.stopPropagation()\r\n        requestDelete(list._id)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                reportParent(reportType.DELETE, {status: response.status})\r\n            }\r\n            else {\r\n                reportParent(reportType.DELETE, {status: response.status, json: {id: list._id}})\r\n            }\r\n        })\r\n    }\r\n\r\n    const toggleRename = event => {\r\n        //Check for event, because it is also called from renameSelf, which does not generates event\r\n        if (event) event.stopPropagation()\r\n        //state.newTitle has to be in sync with the current list.title\r\n        setState((prev) => {\r\n            return {\r\n                ...prev, rename: !prev.rename, newTitle: list.title\r\n            }\r\n        })\r\n    }\r\n\r\n    //triggered by onChange handler of title <input>\r\n    const titleChanged = event => {\r\n        setState((prev) => {\r\n            return {\r\n                ...prev, newTitle: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    const renameSelf = event => {\r\n        event.stopPropagation()\r\n        requestUpdate(list._id, state.newTitle)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                reportParent(reportType.UPDATE, {status: response.status})\r\n                throw new Error(`${response.text}`)\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(todoList => {\r\n            reportParent(reportType.UPDATE, {status: 200, json: todoList})\r\n        })\r\n        .catch(err => console.error(err))\r\n        toggleRename()\r\n    }\r\n\r\n    return (\r\n        <div className=\"li-list\" onClick={clicked}>\r\n            {state.rename ?\r\n            <span onClick={event => event.stopPropagation()}>\r\n                <input type=\"text\" className=\"li-title-rename\" onChange={titleChanged} value={state.newTitle} />\r\n                <FontAwesomeIcon onClick={renameSelf} className=\"fa-rename\" icon={faSave} />    \r\n            </span> :\r\n            <span onClick={event => event.stopPropagation()}>\r\n                {list.title}     \r\n                <FontAwesomeIcon onClick={toggleRename} className=\"fa-rename\" icon={faEdit} />\r\n            </span>}\r\n            <span className=\"li-list-right\">\r\n                <span className=\"indicator-group\">\r\n                    <span className=\"indicator\">\r\n                        <FontAwesomeIcon className=\"danger-text indicator-fa\" icon={faExclamation} />\r\n                        <span className=\"indicator-count\">{list.highPriorityCount}</span>\r\n                    </span>\r\n                    <span className=\"indicator\">\r\n                        <FontAwesomeIcon className=\"warning-text indicator-fa\" icon={faExclamationTriangle} />\r\n                        <span className=\"indicator-count\">{list.pendingCount}</span>\r\n                    </span>\r\n                </span>\r\n                <span className=\"indicator-group\">\r\n                    <span className=\"indicator\">\r\n                        <FontAwesomeIcon onClick={deleteSelf} className=\"indicator-fa\" icon={faTrashAlt} />\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiList","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\UlTodo\\LiTodo.js",["124","125","126"],"import React, { useState, useContext } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faClock, faEdit, faTrash} from '@fortawesome/free-solid-svg-icons'\r\nimport { requestTodoUpdate, requestTodoDelete } from '../utility/APICalls'\r\nimport {reportType} from '../utility/Definations'\r\n\r\nconst LiTodo = ({todoListId, todo, reportParent}) => {\r\n    const [state, setState] = useState({detailedView: false})\r\n    const history = useHistory()\r\n    const msInHours = 3600000\r\n    const liTodoClass = `li-todo ${todo.priority}-priority`\r\n\r\n    var age = (new Date() - new Date(todo.created_at)) / msInHours\r\n    age = age.toFixed(2)\r\n    if (age > 24 ) { \r\n        age /= 24\r\n        age = age.toString() + \" days\"\r\n    }\r\n    else {\r\n        age = age.toString() + \" hours\"\r\n    }\r\n\r\n    const toggleDetails = () => {\r\n        setState((prev) => { return {...prev, detailedView: !prev.detailedView} })\r\n    }\r\n\r\n    const done = (event) => {\r\n        event.stopPropagation()\r\n        requestTodoUpdate(todoListId, {...todo, compeleted: !todo.compeleted})\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                reportParent(reportType.UPDATE, {status: response.status})\r\n                throw new Error('Error occured while updating Todo!')\r\n            }\r\n            return response.json()\r\n        })\r\n        .then(updatedTodo => {\r\n            reportParent(reportType.UPDATE, {status: 200, json: updatedTodo})\r\n        })\r\n    }\r\n\r\n    const deleteSelf = event => {\r\n        event.stopPropagation()\r\n        requestTodoDelete(todoListId, todo._id)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                reportParent(reportType.DELETE, {status: response.status})\r\n                throw new Error('Error occured while deleteing Todo!')\r\n            }\r\n            else {\r\n                reportParent(reportType.DELETE, {status: 200, json: {_id: todo._id}})\r\n            }\r\n        })\r\n    }\r\n\r\n    const editSelf = event => {\r\n        event.stopPropagation()\r\n        history.push(`/todo?listId=${todoListId}`, {todo})\r\n    }\r\n\r\n    return (\r\n        <div className={liTodoClass} onDoubleClick={toggleDetails}>\r\n            <div className=\"li-todo-basic\">\r\n                <input type=\"checkbox\" checked={todo.compeleted} onClick={done} readOnly/>\r\n                <span style={todo.compeleted ? {textDecoration: 'line-through'} : {}}>\r\n                    { todo.title }\r\n                </span>\r\n                <span className=\"li-todo-right\">\r\n                    <div className=\"indicator\">\r\n                        <FontAwesomeIcon className=\"fa-outline\" icon={faClock} />\r\n                        <span className=\"indicator-count\">{age}</span>\r\n                    </div>\r\n                    <span className=\"indicator\">\r\n                        <FontAwesomeIcon icon={faEdit} onClick={editSelf} />\r\n                    </span>\r\n                    <span className=\"indicator\">\r\n                        <FontAwesomeIcon icon={faTrash} onClick={deleteSelf} />\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            {state.detailedView && \r\n                <div className=\"li-todo-detailed\">\r\n                    {todo.desc}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiTodo","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Todo.js",["127"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Nav from './Nav'\r\nimport {QuickButtons, ButtonC} from './QuickButtons'\r\n\r\nconst TodoEdit = () => {\r\n    //priorities enum\r\n    const priorities = [\"Low\", \"Moderate\", \"High\"]\r\n    const property = {\r\n        TITLE: 'title',\r\n        DESC: 'desc',\r\n        PRIORITY: 'priority'\r\n    }\r\n    //local state, required for controlled components\r\n    const [state, setState] = useState({\r\n        title: \"\", desc: \"\", priority: \"low\"\r\n    })   \r\n    const history = useHistory()\r\n    const [todoListId, setTodoListId] = useState(null)\r\n\r\n    const saveTodo = () => {\r\n        //transfer the todo as state to /list/todoListId\r\n        history.push(`/list/${todoListId}`, {todo: {...state}})\r\n    }\r\n\r\n    //Buttons for our form\r\n    const buttons = [\r\n        new ButtonC(state._id ? \"Save\" : \"Create\", null, saveTodo),\r\n        new ButtonC(\"Cancel\", null, () => history.go(-1))\r\n    ]   \r\n\r\n    useEffect(() => {\r\n        //Extract todoListId from URL\r\n        setTodoListId(() => history.location.search.split('=')[1])\r\n        if (history.location.state && history.location.state.todo) {\r\n            setState(() => history.location.state.todo)\r\n        }\r\n    }, [])\r\n\r\n    const propertyChanged = (property, event) => {\r\n        setState(prev => {\r\n            prev[property] = event.target.value\r\n            return {\r\n                ...prev\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <Nav />\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    &lt;todo-title&gt;\r\n                </div>\r\n                <br />\r\n                <div className=\"todo-form\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"input-group\">\r\n                            <label>Title</label>\r\n                            <input type=\"text\" value={state.title} onChange={(event) => propertyChanged(property.TITLE, event)} />\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <label>Priority</label>\r\n                            <select value={state.priority} onChange={(event) => propertyChanged(property.PRIORITY, event)} >\r\n                                {\r\n                                    priorities.map((x, index) => {\r\n                                        return <option key={index} value={x.toLowerCase()}>{x}</option>\r\n                                    })\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label>Desc</label>\r\n                        <textarea onChange={(event) => propertyChanged(property.DESC, event)} value={state.desc} />\r\n                    </div>\r\n                    <QuickButtons buttons={buttons} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoEdit","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\CreateListForm.js",["128"],"import React, {useState} from 'react'\r\nimport {faSave} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {requestCreate} from './utility/APICalls'\r\nimport {reportType} from './utility/Definations'\r\nimport {ButtonC, Button} from './QuickButtons'\r\n\r\n//reportParent => check out the func defination\r\nconst CreateListForm = ({reportParent}) => {\r\n    const [state, setState] = useState({title: \"\"})\r\n    \r\n    const createList = _ => {\r\n        requestCreate(state.title)\r\n        .then(response => {\r\n            if (response.status != 200) {\r\n                //Notify the user of error\r\n                reportParent(reportType.CREATE, {status: response.status}) \r\n                throw new Error(`${response.text}`)\r\n            }\r\n            return response.json()\r\n        })\r\n        .then((todoList) => {\r\n            //Pass this todoList back to the Home component\r\n            //Global will be updated there\r\n            //Reasoning behind this is, CreateListForm is kind of a 'sub-component', it must report to its Parent component in case of any global update\r\n            console.log(todoList)\r\n            reportParent(reportType.CREATE, {status: 200, json: todoList}) \r\n        })\r\n        .catch(err => {\r\n            console.error(err)\r\n        })\r\n    }\r\n\r\n    //On title input change update the state, since the input field is a Controlled Component\r\n    const titleChanged = event => {\r\n        setState((prev) => ({ ...prev, title: event.target.value }))\r\n    }\r\n\r\n    const buttonData = new ButtonC(\"Save\", faSave, createList)\r\n\r\n    return (\r\n        <div className=\"create-list\">\r\n            <div className=\"form-title\">Create a new list</div>\r\n            <div className=\"input-group inline\">\r\n                <label>Title</label>\r\n                <input type=\"text\" value={state.title} onChange={titleChanged} />\r\n                <Button button={buttonData} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateListForm","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\Utils.js",[],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\utility\\Definations.js",[],"C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\ProtectedRoute.js",["129"],"import {useContext} from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport { AuthContext } from './Context'\r\n\r\nconst ProtectedRoute = ({path, children, ...restProps}) => {\r\n    const [auth, setAuth] = useContext(AuthContext)\r\n    return (<>\r\n        {auth.loggedIn ? \r\n        <Route path={path} {...restProps}>\r\n            {children}\r\n        </Route>\r\n        :\r\n        <Redirect to={{pathname: '/login', state: {from: path}}} />\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute","C:\\Users\\Mahi\\Repos\\todo-app\\src\\components\\Logout.js",["130","131","132"],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":3,"column":16,"nodeType":"139","messageId":"140","endLine":3,"endColumn":25},{"ruleId":"137","severity":1,"message":"141","line":4,"column":39,"nodeType":"139","messageId":"140","endLine":4,"endColumn":47},{"ruleId":"137","severity":1,"message":"142","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":25},{"ruleId":"137","severity":1,"message":"143","line":7,"column":9,"nodeType":"139","messageId":"140","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":26,"column":50,"nodeType":"146","messageId":"147","endLine":26,"endColumn":52},{"ruleId":"148","severity":1,"message":"149","line":57,"column":9,"nodeType":"150","messageId":"151","endLine":96,"endColumn":10},{"ruleId":"144","severity":1,"message":"152","line":59,"column":43,"nodeType":"146","messageId":"147","endLine":59,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":64,"column":66,"nodeType":"146","messageId":"147","endLine":64,"endColumn":68},{"ruleId":"144","severity":1,"message":"152","line":71,"column":43,"nodeType":"146","messageId":"147","endLine":71,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":76,"column":76,"nodeType":"146","messageId":"147","endLine":76,"endColumn":78},{"ruleId":"144","severity":1,"message":"145","line":77,"column":102,"nodeType":"146","messageId":"147","endLine":77,"endColumn":104},{"ruleId":"153","severity":1,"message":"154","line":78,"column":82,"nodeType":"155","messageId":"156","endLine":78,"endColumn":83,"fix":"157"},{"ruleId":"144","severity":1,"message":"152","line":84,"column":43,"nodeType":"146","messageId":"147","endLine":84,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":89,"column":76,"nodeType":"146","messageId":"147","endLine":89,"endColumn":78},{"ruleId":"144","severity":1,"message":"145","line":90,"column":102,"nodeType":"146","messageId":"147","endLine":90,"endColumn":104},{"ruleId":"144","severity":1,"message":"152","line":104,"column":37,"nodeType":"146","messageId":"147","endLine":104,"endColumn":39},{"ruleId":"144","severity":1,"message":"152","line":119,"column":37,"nodeType":"146","messageId":"147","endLine":119,"endColumn":39},{"ruleId":"144","severity":1,"message":"152","line":148,"column":33,"nodeType":"146","messageId":"147","endLine":148,"endColumn":35},{"ruleId":"144","severity":1,"message":"145","line":153,"column":60,"nodeType":"146","messageId":"147","endLine":153,"endColumn":62},{"ruleId":"158","severity":1,"message":"159","line":216,"column":9,"nodeType":"160","endLine":216,"endColumn":11,"suggestions":"161"},{"ruleId":"137","severity":1,"message":"142","line":1,"column":16,"nodeType":"139","messageId":"140","endLine":1,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":25,"column":40,"nodeType":"146","messageId":"147","endLine":25,"endColumn":42},{"ruleId":"137","severity":1,"message":"162","line":9,"column":12,"nodeType":"139","messageId":"140","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":26,"column":24,"nodeType":"146","messageId":"147","endLine":26,"endColumn":26},{"ruleId":"148","severity":1,"message":"149","line":60,"column":9,"nodeType":"150","messageId":"151","endLine":101,"endColumn":10},{"ruleId":"144","severity":1,"message":"152","line":62,"column":43,"nodeType":"146","messageId":"147","endLine":62,"endColumn":45},{"ruleId":"144","severity":1,"message":"152","line":74,"column":43,"nodeType":"146","messageId":"147","endLine":74,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":81,"column":68,"nodeType":"146","messageId":"147","endLine":81,"endColumn":70},{"ruleId":"144","severity":1,"message":"152","line":82,"column":35,"nodeType":"146","messageId":"147","endLine":82,"endColumn":37},{"ruleId":"144","severity":1,"message":"152","line":89,"column":43,"nodeType":"146","messageId":"147","endLine":89,"endColumn":45},{"ruleId":"144","severity":1,"message":"152","line":96,"column":35,"nodeType":"146","messageId":"147","endLine":96,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":105,"column":25,"nodeType":"146","messageId":"147","endLine":105,"endColumn":27},{"ruleId":"144","severity":1,"message":"152","line":138,"column":33,"nodeType":"146","messageId":"147","endLine":138,"endColumn":35},{"ruleId":"144","severity":1,"message":"152","line":169,"column":37,"nodeType":"146","messageId":"147","endLine":169,"endColumn":39},{"ruleId":"158","severity":1,"message":"163","line":184,"column":8,"nodeType":"160","endLine":184,"endColumn":10,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"152","line":24,"column":33,"nodeType":"146","messageId":"147","endLine":24,"endColumn":35},{"ruleId":"144","severity":1,"message":"152","line":57,"column":33,"nodeType":"146","messageId":"147","endLine":57,"endColumn":35},{"ruleId":"137","severity":1,"message":"165","line":1,"column":27,"nodeType":"139","messageId":"140","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"152","line":32,"column":33,"nodeType":"146","messageId":"147","endLine":32,"endColumn":35},{"ruleId":"144","severity":1,"message":"152","line":47,"column":33,"nodeType":"146","messageId":"147","endLine":47,"endColumn":35},{"ruleId":"158","severity":1,"message":"166","line":39,"column":8,"nodeType":"160","endLine":39,"endColumn":10,"suggestions":"167"},{"ruleId":"144","severity":1,"message":"152","line":15,"column":33,"nodeType":"146","messageId":"147","endLine":15,"endColumn":35},{"ruleId":"137","severity":1,"message":"168","line":6,"column":18,"nodeType":"139","messageId":"140","endLine":6,"endColumn":25},{"ruleId":"137","severity":1,"message":"169","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"170","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":22},{"ruleId":"137","severity":1,"message":"171","line":7,"column":11,"nodeType":"139","messageId":"140","endLine":7,"endColumn":17},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useState' is defined but never used.","'request' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"174","text":"175"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'global.todoLists', 'handleReceivedTodo', 'history', and 'id'. Either include them or remove the dependency array.","ArrayExpression",["176"],"'auth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authContext', 'global.todoLists', 'listSortingCallback', and 'tagAndUpdateTodoLists'. Either include them or remove the dependency array.",["177"],"'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'history.location.search' and 'history.location.state'. Either include them or remove the dependency array.",["178"],"'setAuth' is assigned a value but never used.","'React' is defined but never used.","'GoogleLogout' is defined but never used.","'logout' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3256,3257],"",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [global.todoLists, handleReceivedTodo, history, id]",{"range":"185","text":"186"},"Update the dependencies array to be: [authContext, global.todoLists, listSortingCallback, tagAndUpdateTodoLists]",{"range":"187","text":"188"},"Update the dependencies array to be: [history.location.search, history.location.state]",{"range":"189","text":"190"},[8853,8855],"[global.todoLists, handleReceivedTodo, history, id]",[6891,6893],"[authContext, global.todoLists, listSortingCallback, tagAndUpdateTodoLists]",[1266,1268],"[history.location.search, history.location.state]"]